# gunicorn --capture-output --enable-stdio-inheritance -w 1 --threads 10 -b 0.0.0.0:5002 flask-runner:app --timeout 1000 --log-config gunicorn_log.conf
# gunicorn -w 4 -b 0.0.0.0:8000 --access-logfile - --error-logfile - --log-level debug --log-format '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"'
[loggers]
keys=root, gunicorn.error, gunicorn.access

[handlers]
keys=console, error_file, access_file
# keys=console

[formatters]
keys=generic, access

[logger_root]
level=INFO
handlers=console

[logger_gunicorn.error]
level=INFO
handlers=error_file
propagate=1
qualname=gunicorn.error

[logger_gunicorn.access]
level=INFO
handlers=access_file
propagate=0
qualname=gunicorn.access

[handler_console]
class=StreamHandler
formatter=generic
args=(sys.stdout, )

[handler_error_file]
class=logging.FileHandler
formatter=generic
args=('/Users/ankur.mahajan/Documents/searchunify/code/github_searchunify/motifer-py/gunicorn.error.log',)

[handler_access_file]
class=logging.FileHandler
formatter=access
args=('/Users/ankur.mahajan/Documents/searchunify/code/github_searchunify/motifer-py/gunicorn.access.log',)

[formatter_generic]
# format=%(asctime)s [%(process)d] [%(levelname)s] %(message)s
format=%(asctime)s [service] [-] [webappname] [%(levelname)-4s] [%(filename)s:%(lineno)d] %(message)s
datefmt=%Y-%m-%d %H:%M:%S
class=logging.Formatter

[formatter_access]
format=%(message)s
class=logging.Formatter